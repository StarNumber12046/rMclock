/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -p powerapi_interface.h: ../../../../interfaces/powerapi.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef POWERAPI_INTERFACE_H
#define POWERAPI_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface codes.eeems.oxide1.Power
 */
class CodesEeemsOxide1PowerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "codes.eeems.oxide1.Power"; }

public:
    CodesEeemsOxide1PowerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~CodesEeemsOxide1PowerInterface();

    Q_PROPERTY(int batteryLevel READ batteryLevel)
    inline int batteryLevel() const
    { return qvariant_cast< int >(property("batteryLevel")); }

    Q_PROPERTY(int batteryState READ batteryState)
    inline int batteryState() const
    { return qvariant_cast< int >(property("batteryState")); }

    Q_PROPERTY(int batteryTemperature READ batteryTemperature)
    inline int batteryTemperature() const
    { return qvariant_cast< int >(property("batteryTemperature")); }

    Q_PROPERTY(int chargerState READ chargerState)
    inline int chargerState() const
    { return qvariant_cast< int >(property("chargerState")); }

    Q_PROPERTY(int state READ state WRITE setState)
    inline int state() const
    { return qvariant_cast< int >(property("state")); }
    inline void setState(int value)
    { setProperty("state", QVariant::fromValue(value)); }

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void batteryAlert();
    void batteryLevelChanged(int in0);
    void batteryStateChanged(int in0);
    void batteryTemperatureChanged(int in0);
    void batteryWarning();
    void chargerStateChanged(int in0);
    void chargerWarning();
    void stateChanged(int in0);
};

namespace codes {
  namespace eeems {
    namespace oxide1 {
      typedef ::CodesEeemsOxide1PowerInterface Power;
    }
  }
}
#endif
